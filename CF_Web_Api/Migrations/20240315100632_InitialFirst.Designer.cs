// <auto-generated />
using System;
using CF_Web_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CF_Web_Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240315100632_InitialFirst")]
    partial class InitialFirst
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CF_Web_Api.Data.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("HoTen")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Pass")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("CF_Web_Api.Data.Blocks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("BlockCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BlockName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BlockNo")
                        .HasColumnType("int");

                    b.Property<Guid?>("CampusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("CF_Web_Api.Data.Ca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TenCa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan?>("ThoiGian")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Ca", (string)null);
                });

            modelBuilder.Entity("CF_Web_Api.Data.Campus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CampusCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CampusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CampusSymbol")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Campus", (string)null);
                });

            modelBuilder.Entity("CF_Web_Api.Data.DanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("LoaiDanhGia")
                        .HasColumnType("bit");

                    b.Property<string>("TenNoiDungDanhGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("CF_Web_Api.Data.Floors", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("BlockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FloorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FloorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FloorNotes")
                        .HasColumnType("int");

                    b.Property<int?>("FloorOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.ToTable("Floors");
                });

            modelBuilder.Entity("CF_Web_Api.Data.FormDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdCa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdRoom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("IdCa");

                    b.HasIndex("IdRoom");

                    b.ToTable("formDanhGia", (string)null);
                });

            modelBuilder.Entity("CF_Web_Api.Data.ReportAuthorize", b =>
                {
                    b.Property<Guid>("IdForm")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDanhGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdForm", "IdDanhGia");

                    b.HasIndex("IdDanhGia");

                    b.ToTable("reportAuthorize", (string)null);
                });

            modelBuilder.Entity("CF_Web_Api.Data.ReportDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("FormDanhGiaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("formDanhGiaId");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("FormDanhGiaId");

                    b.ToTable("ReportDanhGia");
                });

            modelBuilder.Entity("CF_Web_Api.Data.Rooms", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("FloorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoomCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoomName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("FloorsId");

                    b.HasIndex("IdCate");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("CF_Web_Api.Data.RoomsCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("roomCategory", (string)null);
                });

            modelBuilder.Entity("CF_Web_Api.Data.Blocks", b =>
                {
                    b.HasOne("CF_Web_Api.Data.Campus", "Campus")
                        .WithMany("Blocks")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK__Blocks__CampusId__3D5E1FD2");

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("CF_Web_Api.Data.Floors", b =>
                {
                    b.HasOne("CF_Web_Api.Data.Blocks", "Block")
                        .WithMany("Floors")
                        .HasForeignKey("BlockId")
                        .HasConstraintName("FK__Floors__BlockId__4316F928");

                    b.Navigation("Block");
                });

            modelBuilder.Entity("CF_Web_Api.Data.FormDanhGia", b =>
                {
                    b.HasOne("CF_Web_Api.Data.Ca", "IdCaNavigation")
                        .WithMany("FormDanhGia")
                        .HasForeignKey("IdCa")
                        .HasConstraintName("FK__formDanhGi__IdCa__6383C8BA");

                    b.HasOne("CF_Web_Api.Data.Rooms", "IdRoomNavigation")
                        .WithMany("FormDanhGia")
                        .HasForeignKey("IdRoom")
                        .HasConstraintName("FK__formDanhG__IdRoo__628FA481");

                    b.Navigation("IdCaNavigation");

                    b.Navigation("IdRoomNavigation");
                });

            modelBuilder.Entity("CF_Web_Api.Data.ReportAuthorize", b =>
                {
                    b.HasOne("CF_Web_Api.Data.DanhGia", "IdDanhGiaNavigation")
                        .WithMany("ReportAuthorizes")
                        .HasForeignKey("IdDanhGia")
                        .IsRequired()
                        .HasConstraintName("FK__reportAut__IdDan__693CA210");

                    b.HasOne("CF_Web_Api.Data.FormDanhGia", "IdFormNavigation")
                        .WithMany("ReportAuthorizes")
                        .HasForeignKey("IdForm")
                        .IsRequired()
                        .HasConstraintName("FK__reportAut__IdFor__68487DD7");

                    b.Navigation("IdDanhGiaNavigation");

                    b.Navigation("IdFormNavigation");
                });

            modelBuilder.Entity("CF_Web_Api.Data.ReportDanhGia", b =>
                {
                    b.HasOne("CF_Web_Api.Data.Account", "Account")
                        .WithMany("ReportDanhGia")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__ReportDan__Accou__6FE99F9F");

                    b.HasOne("CF_Web_Api.Data.FormDanhGia", "FormDanhGia")
                        .WithMany("ReportDanhGia")
                        .HasForeignKey("FormDanhGiaId")
                        .HasConstraintName("FK__ReportDan__formD__6EF57B66");

                    b.Navigation("Account");

                    b.Navigation("FormDanhGia");
                });

            modelBuilder.Entity("CF_Web_Api.Data.Rooms", b =>
                {
                    b.HasOne("CF_Web_Api.Data.Floors", "Floors")
                        .WithMany("Rooms")
                        .HasForeignKey("FloorsId")
                        .HasConstraintName("FK__Room__FloorsId__4E88ABD4");

                    b.HasOne("CF_Web_Api.Data.RoomsCategory", "IdCateNavigation")
                        .WithMany("Rooms")
                        .HasForeignKey("IdCate")
                        .HasConstraintName("FK__Room__IdCate__4D94879B");

                    b.Navigation("Floors");

                    b.Navigation("IdCateNavigation");
                });

            modelBuilder.Entity("CF_Web_Api.Data.Account", b =>
                {
                    b.Navigation("ReportDanhGia");
                });

            modelBuilder.Entity("CF_Web_Api.Data.Blocks", b =>
                {
                    b.Navigation("Floors");
                });

            modelBuilder.Entity("CF_Web_Api.Data.Ca", b =>
                {
                    b.Navigation("FormDanhGia");
                });

            modelBuilder.Entity("CF_Web_Api.Data.Campus", b =>
                {
                    b.Navigation("Blocks");
                });

            modelBuilder.Entity("CF_Web_Api.Data.DanhGia", b =>
                {
                    b.Navigation("ReportAuthorizes");
                });

            modelBuilder.Entity("CF_Web_Api.Data.Floors", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("CF_Web_Api.Data.FormDanhGia", b =>
                {
                    b.Navigation("ReportAuthorizes");

                    b.Navigation("ReportDanhGia");
                });

            modelBuilder.Entity("CF_Web_Api.Data.Rooms", b =>
                {
                    b.Navigation("FormDanhGia");
                });

            modelBuilder.Entity("CF_Web_Api.Data.RoomsCategory", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
